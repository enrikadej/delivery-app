{"version":3,"sources":["api/api.ts","components/Card/Card.tsx","components/Shop/Shop.tsx","components/AcceptedOrder/AcceptedOrder.tsx","components/ShoppingCart/ShoppingCart.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["URL","getStores","a","fetch","response","json","postOrder","order","method","body","JSON","stringify","headers","addedOrder","Card","product","actionCart","image","title","price","className","src","alt","type","onClick","Shop","useState","stores","setStores","products","setProducts","useEffect","then","map","store","console","log","storeName","id","AcceptedOrder","modalActive","setModalActive","role","tabIndex","event","stopPropagation","onKeyDown","classNames","modal__active","ShoppingCart","cart","count","setCount","total","setTotal","error","setError","addingOrder","value","packOrder","user","name","email","phone","address","foodstuff","result","reduce","acc","prod","qty","rem","localStorage","getItem","initialValues","onSubmit","values","actions","length","resetForm","field","htmlFor","required","disabled","min","max","redonly","NotFoundPage","App","shoppingCart","setShoppingCart","action","exist","find","item","index","indexOf","temp","splice","to","isActive","undefined","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a7b864a.chunk.js","sourcesContent":["import { Order } from '../react-app-env.d';\n\nconst URL = 'http://localhost:3001';\n\nexport const getStores = async () => {\n  const response = await fetch(`${URL}/shops`);\n\n  return response.json();\n};\n\nexport const postOrder = async (order: Order): Promise<Order[]> => {\n  const response = await fetch(`${URL}/orders`, {\n    method: 'POST',\n    body: JSON.stringify(order),\n    headers: {\n      'Content-type': 'application/json',\n    },\n  });\n\n  const addedOrder = await response.json();\n\n  return addedOrder;\n};\n","import React from 'react';\nimport { ProductCart } from '../../react-app-env.d';\nimport './Card.scss';\n\ntype Props = {\n  product: ProductCart\n  actionCart: (order: ProductCart, action: string) => void\n};\n\nexport const Card:React.FC<Props> = ({ product, actionCart }) => {\n  const { image, title, price } = product;\n\n  return (\n    <div className=\"card\">\n      <img\n        src={image}\n        alt={title}\n        className=\"card__image\"\n      />\n      <div className=\"card__description\">\n        <h3 className=\"card__title\">\n          {title}\n        </h3>\n        <h3 className=\"card__price\">\n          {`${price},00 UAH`}\n        </h3>\n      </div>\n      <div className=\"card__wrap-button\">\n        <button\n          type=\"button\"\n          className=\"card__button-buy\"\n          onClick={() => actionCart(product, 'add')}\n        >\n          buy\n        </button>\n      </div>\n\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { getStores } from '../../api/api';\nimport { ProductCart, Store } from '../../react-app-env.d';\nimport { Card } from '../Card';\nimport './Shop.scss';\n\ntype Props = {\n  actionCart: (order: ProductCart, action: string) => void\n};\n\nexport const Shop:React.FC<Props> = ({ actionCart }) => {\n  const [stores, setStores] = useState<Store[]>([]);\n  const [products, setProducts] = useState<ProductCart[]>([]);\n\n  useEffect(() => {\n    getStores()\n      .then(response => setStores(response));\n  }, []);\n\n  return (\n    <div className=\"shop\">\n      <div className=\"shop__list\">\n        {stores.map(store => (\n          <button\n            key={store.id}\n            type=\"button\"\n            className=\"shop__item store\"\n            onClick={() => {\n              setProducts(store.products);\n              console.log(store.products);\n            }}\n          >\n            {store.storeName}\n          </button>\n        ))}\n      </div>\n      <div className=\"shop__products products\">\n        {products.map(product => (\n          <div key={product.id}>\n            <Card\n              product={product}\n              actionCart={actionCart}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './AcceptedOrder.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  modalActive: boolean,\n  setModalActive: (modal :boolean) => void,\n};\n\nexport const AcceptedOrder:React.FC<Props> = ({ modalActive, setModalActive }) => (\n  <div\n    role=\"textbox\"\n    tabIndex={0}\n    onClick={(event) => {\n      event.stopPropagation();\n      setModalActive(false);\n    }}\n    onKeyDown={(event) => {\n      event.stopPropagation();\n      setModalActive(false);\n    }}\n    className={classNames(\n      'accepted',\n      {\n        modal__active: modalActive,\n      },\n    )}\n  >\n    <h1 className=\"accepted__title\">\n      Your order is accepted!\n    </h1>\n  </div>\n);\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ProductCart } from '../../react-app-env.d';\nimport './ShoppingCart.scss';\nimport { postOrder } from '../../api/api';\nimport { AcceptedOrder } from '../AcceptedOrder';\n\ntype Props = {\n  cart: ProductCart[],\n  actionCart: (order: ProductCart, action: string) => void\n};\n\ninterface MyFormValues {\n  name: string,\n  email: string,\n  phone: string,\n  address: string,\n}\n\nexport const ShoppingCart:React.FC<Props> = ({ cart, actionCart }) => {\n  const [count, setCount] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  // const [tempCart, setTempCart] = useState<ProductCart[] | null>(null);\n\n  const initialValues: MyFormValues = {\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n  };\n\n  const addingOrder = async (value: MyFormValues) => {\n    const packOrder = {\n      id: count,\n      user: {\n        name: value.name,\n        email: value.email,\n        phone: value.phone,\n        address: value.address,\n      },\n      foodstuff: cart,\n      total,\n    };\n\n    // eslint-disable-next-line no-console\n    console.log(packOrder);\n\n    if (packOrder.foodstuff) {\n      await postOrder(packOrder);\n    }\n\n    setCount(count + 1);\n    setTotal(0);\n    actionCart(cart[0], 'empty');\n  };\n\n  console.log('card!!!', cart);\n  // add all goods from locale storage, parse in array, add new good, set to local storage\n  // in shopping cart -> get all array of goods -> map\n  useEffect(() => {\n    const result = cart.reduce((acc, prod) => {\n      return acc + (prod.qty * prod.price);\n    }, 0);\n\n    setTotal(result);\n\n    // localStorage.setItem('cart', JSON.stringify(cart));\n\n    // const rem = localStorage.getItem('cart');\n\n    // if (rem) {\n    //   setTempCart(JSON.parse(rem));\n    // }\n  }, [cart]);\n\n  useEffect(() => {\n    const rem = localStorage.getItem('cart');\n\n    console.log(rem, 'component did mount');\n\n    // if (rem) {\n    //   setTempCart(JSON.parse(rem));\n    // }\n  }, []);\n\n  const fields = ['name', 'email', 'phone', 'address'];\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          // eslint-disable-next-line no-console\n          console.log({ values, actions });\n\n          if (cart.length > 0) {\n            addingOrder(values);\n            setModalActive(true);\n            setError(false);\n          } else {\n            setError(true);\n          }\n\n          actions.resetForm();\n        }}\n      >\n        <Form className=\"cart\">\n          <div className=\"cart__info\">\n\n            {fields.map(field => (\n              <div className=\"cart__form-field\" key={field}>\n                <label htmlFor={field}>\n                  {`Your ${field}`}\n                  <br />\n                  <Field\n                    id={field}\n                    name={field}\n                    className=\"cart__input\"\n                    required\n                  />\n                </label>\n              </div>\n            ))}\n\n            <div>\n              <h3 className=\"cart__total\">\n                {`Total: ${total} UAH`}\n              </h3>\n\n              {error && (\n                <p className=\"cart__error\">\n                  Your cart is empty!\n                </p>\n              )}\n\n              <div className=\"cart__wrap-button\">\n                <button\n                  type=\"submit\"\n                  className=\"cart__submit-button\"\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"cart__orders orders\">\n            {cart.map(product => (\n              <div className=\"cart__cardInCart cardInCart\" key={product.id}>\n                <img\n                  src={product.image}\n                  alt={product.title}\n                  className=\"cardInCart__image\"\n                />\n                <div className=\"cardInCart__description\">\n                  <h3 className=\"cardInCart__title\">\n                    {product.title}\n                  </h3>\n                  <h3 className=\"cardInCart__price\">\n                    {`${product.price},00 UAH`}\n                  </h3>\n\n                  <div className=\"cardInCart__qty qty\">\n                    <div className=\"qty__count\">\n                      <button\n                        type=\"button\"\n                        className=\"qty__decrease\"\n                        onClick={() => actionCart(product, 'subtract')}\n                        disabled={product.qty === 1}\n                      >\n                        -\n                      </button>\n                      <Field\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"100\"\n                        value={product.qty}\n                        className=\"qty__input\"\n                        redonly\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => actionCart(product, 'add')}\n                        className=\"qty__increase\"\n                      >\n                        +\n                      </button>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      className=\"qty__delete\"\n                      onClick={() => actionCart(product, 'delete')}\n                    >\n                      delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Form>\n      </Formik>\n      {modalActive && (\n        <AcceptedOrder modalActive={modalActive} setModalActive={setModalActive} />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return (\n    <></>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport {\n  NavLink, Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport { Shop } from './components/Shop';\nimport { ShoppingCart } from './components/ShoppingCart';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { ProductCart } from './react-app-env.d';\n\nexport const App: React.FC = () => {\n  const [shoppingCart, setShoppingCart] = useState<ProductCart[]>([]);\n\n  const actionCart = (order: ProductCart, action: string) => {\n    const exist = shoppingCart.find(item => item.id === order.id);\n\n    switch (action) {\n      case 'add':\n        console.log('add product!');\n        console.log('exist', exist);\n        if (exist) {\n          console.log('add product2');\n          setShoppingCart(\n            shoppingCart.map((item) => (\n              item.id === order.id ? { ...exist, qty: exist.qty + 1 } : item\n            )),\n          );\n        } else {\n          console.log('product added');\n          setShoppingCart([...shoppingCart, { ...order, qty: +1 }]);\n        }\n\n        break;\n\n      case 'subtract':\n        if (exist) {\n          setShoppingCart(\n            shoppingCart.map((item) => (\n              item.id === order.id ? { ...exist, qty: exist.qty - 1 } : item\n            )),\n          );\n        } else {\n          setShoppingCart([...shoppingCart, { ...order, qty: -1 }]);\n        }\n\n        break;\n\n      case 'delete':\n        if (exist) {\n          const index = shoppingCart.indexOf(exist);\n          const temp = [...shoppingCart];\n\n          temp.splice(index, 1);\n          setShoppingCart(temp);\n        }\n\n        break;\n\n      case 'empty':\n        setShoppingCart([]);\n\n        break;\n\n      default:\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__tabs\">\n        <NavLink\n          to=\"/shop\"\n          className={isActive => `App__button ${isActive ? 'activeLink' : undefined}`}\n        >\n          Shop\n        </NavLink>\n        <NavLink\n          to=\"/cart\"\n          className={isActive => `App__button ${isActive ? 'activeLink' : undefined}`}\n        >\n          Shopping Cart\n        </NavLink>\n      </div>\n\n      <Routes>\n        <Route path=\"/shop\" element={<Shop actionCart={actionCart} />} />\n        <Route path=\"/\" element={<Navigate to=\"/shop\" />} />\n\n        <Route\n          path=\"/cart\"\n          element={\n            <ShoppingCart cart={shoppingCart} actionCart={actionCart} />\n          }\n        />\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter as HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}